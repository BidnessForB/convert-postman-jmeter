version: 2

jobs:
  build:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
        - checkout
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
        - run: npm install
        - run: npm run lint
        - save_cache:
            paths:
              - node_modules
            key: v1-dependencies-{{ checksum "package.json" }}
        - run: mkdir ~/repo/junit
        - run:
            command: npm test
            environment:
              MOCHA_FILE: ~/repo/junit/test-results.xml
            when: always
        - store_test_results:
            path: ~/repo/junit

  deploy-stage:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
        - checkout
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
        - run:
            name: Authenticate with registry
            command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
        - deploy:
            name: Publish package
            command: npm publish --tag beta
            filters:
              branches:
                only:
                  - master

  deploy-prod:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/repo
    steps:
        - checkout
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
        - run:
            name: Authenticate with registry
            command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/repo/.npmrc
        - deploy:
            name: Publish package
            command: npm publish
            filters:
              branches:
                only:
                  - master
workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /feature-.*/
              ignore:
                - develop
      - deploy-stage:
          requires:
            - build
          filters:
            branches:
              only: staging
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only: master
